<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="USMECYASMITTAL1" ignored="12" name="Surefire test" tests="2" failures="0" timestamp="05 May 2020 19:28:51 GMT" time="0.671" errors="0">
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="BaseTest.BaseTest">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeTest on method beforeTest but has not been marked @Optional or defined

... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeClass startTest" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass startTest -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass endTest" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass endTest -->
  <testcase name="@BeforeClass startTest" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @BeforeClass startTest -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass endTest" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass endTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="BaseTest.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="TestLoginPass" time="0.0" classname="TestCases.Test1">
    <skipped/>
  </testcase> <!-- TestLoginPass -->
  <testcase name="TestLoginPass" time="0.0" classname="TestCases.Test2">
    <skipped/>
  </testcase> <!-- TestLoginPass -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeSuite beforesuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforesuite -->
  <testcase name="@BeforeSuite beforesuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforesuite -->
  <testcase name="@BeforeSuite beforesuite" time="0.0" classname="BaseTest.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforesuite -->
</testsuite> <!-- Surefire test -->
